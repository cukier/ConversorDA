CCS PCH C Compiler, Version 4.124, 5967               16-out-12 11:15

               Filename: C:\Users\cuki\Eletronica\Projetos\ConversorDA\main.lst

               ROM used: 2850 bytes (9%)
                         Largest free fragment is 29918
               RAM used: 45 (3%) at main() level
                         71 (5%) worst case
               Stack:    3 locations

*
0000:  GOTO   09B6
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 05/10/2012 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #DEVICE ADC=10 
....................  
.................... #fuses HS,NOOSCSEN,NOPUT,NOBROWNOUT,NOWDT,NOSTVREN,NOLVP,NODEBUG,NOPROTECT,NOCPB,NOCPD,NOWRT,NOWRTC,NOWRTB,NOWRTD,NOEBTR,NOEBTRB 
.................... #use delay(clock=8MHz) 
*
002E:  CLRF   FEA
0030:  MOVLW  27
0032:  MOVWF  FE9
0034:  MOVF   FEF,W
0036:  BZ    0052
0038:  MOVLW  02
003A:  MOVWF  01
003C:  CLRF   00
003E:  DECFSZ 00,F
0040:  BRA    003E
0042:  DECFSZ 01,F
0044:  BRA    003C
0046:  MOVLW  97
0048:  MOVWF  00
004A:  DECFSZ 00,F
004C:  BRA    004A
004E:  DECFSZ FEF,F
0050:  BRA    0038
0052:  RETURN 0
.................... #use rs232(baud=9660, xmit=pin_c6, rcv=pin_c7) 
....................  
.................... #include "press.h" 
.................... /* 
....................  * press.h 
....................  * 
....................  *  Created on: 11/10/2012 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #ifndef PRESS_H_ 
.................... #define PRESS_H_ 
.................... #define buffer_size 10 
....................  
.................... long value[buffer_size], *from, *to, somaElementos, leitura; 
.................... int cont, nrElementos; 
.................... float media; 
....................  
.................... void reset_variables(void) { 
.................... 	for (cont = 0; cont < buffer_size; cont++) { 
*
00B0:  CLRF   20
00B2:  MOVF   20,W
00B4:  SUBLW  09
00B6:  BNC   00D2
.................... 		value[cont] = 0; 
00B8:  BCF    FD8.0
00BA:  RLCF   20,W
00BC:  CLRF   03
00BE:  ADDLW  04
00C0:  MOVWF  FE9
00C2:  MOVLW  00
00C4:  ADDWFC 03,W
00C6:  MOVWF  FEA
00C8:  CLRF   FEC
00CA:  MOVF   FED,F
00CC:  CLRF   FEF
.................... 	} 
00CE:  INCF   20,F
00D0:  BRA    00B2
.................... 	somaElementos = leitura = nrElementos = media = 0; 
00D2:  CLRF   25
00D4:  CLRF   24
00D6:  CLRF   23
00D8:  CLRF   22
00DA:  MOVFF  25,29
00DE:  MOVFF  24,28
00E2:  MOVFF  23,27
00E6:  MOVFF  22,26
00EA:  BRA    0076
00EC:  MOVFF  01,21
00F0:  CLRF   1F
00F2:  MOVFF  21,1E
00F6:  MOVFF  1F,1D
00FA:  MOVFF  1E,1C
.................... 	from = to = '\0'; 
00FE:  CLRF   1B
0100:  CLRF   1A
0102:  MOVFF  1B,19
0106:  MOVFF  1A,18
.................... } 
010A:  GOTO   09EA (RETURN)
....................  
.................... void setup_DAC(void) { 
.................... 	setup_adc(ADC_CLOCK_INTERNAL); 
*
0054:  BCF    FC1.6
0056:  BSF    FC2.6
0058:  BSF    FC2.7
005A:  BSF    FC1.7
005C:  BSF    FC2.0
.................... 	setup_adc_ports(AN0_AN1_VSS_VREF); 
005E:  BSF    FC1.0
0060:  BCF    FC1.1
0062:  BSF    FC1.2
0064:  BCF    FC1.3
.................... 	set_adc_channel(0); 
0066:  MOVLW  00
0068:  MOVWF  01
006A:  MOVF   FC2,W
006C:  ANDLW  C7
006E:  IORWF  01,W
0070:  MOVWF  FC2
.................... } 
0072:  GOTO   09E6 (RETURN)
....................  
.................... float push(long dado) { 
.................... 	leitura = value[nrElementos] = dado; 
*
02A0:  BCF    FD8.0
02A2:  RLCF   21,W
02A4:  CLRF   03
02A6:  ADDLW  04
02A8:  MOVWF  FE9
02AA:  MOVLW  00
02AC:  ADDWFC 03,W
02AE:  MOVWF  FEA
02B0:  MOVFF  2D,FEC
02B4:  MOVF   FED,F
02B6:  MOVFF  2C,FEF
02BA:  MOVFF  2D,1F
02BE:  MOVFF  2C,1E
.................... 	somaElementos += dado; 
02C2:  MOVF   2C,W
02C4:  ADDWF  1C,F
02C6:  MOVF   2D,W
02C8:  ADDWFC 1D,F
.................... 	nrElementos++; 
02CA:  INCF   21,F
.................... 	if (nrElementos == buffer_size) { 
02CC:  MOVF   21,W
02CE:  SUBLW  0A
02D0:  BNZ   032E
.................... 		nrElementos--; 
02D2:  DECF   21,F
.................... 		somaElementos -= value[0]; 
02D4:  MOVF   04,W
02D6:  SUBWF  1C,F
02D8:  MOVF   05,W
02DA:  SUBWFB 1D,F
.................... 		to = value; 
02DC:  CLRF   1B
02DE:  MOVLW  04
02E0:  MOVWF  1A
.................... 		from = to + 1; 
02E2:  MOVLW  02
02E4:  ADDWF  1A,W
02E6:  MOVWF  18
02E8:  MOVLW  00
02EA:  ADDWFC 1B,W
02EC:  MOVWF  19
.................... 		for (cont = 0; cont < buffer_size; cont++) { 
02EE:  CLRF   20
02F0:  MOVF   20,W
02F2:  SUBLW  09
02F4:  BNC   032E
.................... 			*to = *from; 
02F6:  MOVFF  18,FE9
02FA:  MOVFF  19,FEA
02FE:  MOVFF  FEC,03
0302:  MOVF   FED,F
0304:  MOVFF  FEF,30
0308:  MOVFF  1B,FEA
030C:  MOVFF  1A,FE9
0310:  MOVFF  03,FEC
0314:  MOVF   FED,F
0316:  MOVFF  30,FEF
.................... 			to++; 
031A:  MOVLW  02
031C:  ADDWF  1A,F
031E:  BTFSC  FD8.0
0320:  INCF   1B,F
.................... 			from++; 
0322:  MOVLW  02
0324:  ADDWF  18,F
0326:  BTFSC  FD8.0
0328:  INCF   19,F
.................... 		} 
032A:  INCF   20,F
032C:  BRA    02F0
.................... 	} 
.................... 	media = (float) somaElementos / nrElementos; 
032E:  MOVFF  1D,33
0332:  MOVFF  1C,32
0336:  RCALL  010E
0338:  MOVFF  00,2E
033C:  MOVFF  01,2F
0340:  MOVFF  02,30
0344:  MOVFF  03,31
0348:  CLRF   33
034A:  MOVFF  21,32
034E:  RCALL  010E
0350:  MOVFF  31,35
0354:  MOVFF  30,34
0358:  MOVFF  2F,33
035C:  MOVFF  2E,32
0360:  MOVFF  03,39
0364:  MOVFF  02,38
0368:  MOVFF  01,37
036C:  MOVFF  00,36
0370:  BRA    0144
0372:  MOVFF  03,25
0376:  MOVFF  02,24
037A:  MOVFF  01,23
037E:  MOVFF  00,22
.................... //	leitura = value[nrElementos - 1]; 
.................... 	return media; 
0382:  MOVFF  22,00
0386:  MOVFF  23,01
038A:  MOVFF  24,02
038E:  MOVFF  25,03
.................... } 
0392:  GOTO   042C (RETURN)
....................  
.................... short check(float max) { 
.................... 	return push(1023 - read_adc()) >= max ? 0 : 1; 
*
040E:  BSF    FC2.2
0410:  BTFSC  FC2.2
0412:  BRA    0410
0414:  MOVFF  FC4,03
0418:  MOVF   FC3,W
041A:  SUBLW  FF
041C:  MOVWF  2A
041E:  MOVLW  03
0420:  SUBFWB FC4,W
0422:  MOVWF  2B
0424:  MOVWF  2D
0426:  MOVFF  2A,2C
042A:  BRA    02A0
042C:  MOVFF  00,2A
0430:  MOVFF  01,2B
0434:  MOVFF  02,2C
0438:  MOVFF  03,2D
043C:  MOVFF  29,31
0440:  MOVFF  28,30
0444:  MOVFF  27,2F
0448:  MOVFF  26,2E
044C:  MOVFF  03,35
0450:  MOVFF  02,34
0454:  MOVFF  01,33
0458:  MOVFF  00,32
045C:  BRA    0396
045E:  BC    0462
0460:  BNZ   0468
0462:  CLRF   03
0464:  MOVLW  00
0466:  BRA    046C
0468:  CLRF   03
046A:  MOVLW  01
046C:  MOVWF  01
.................... } 
046E:  GOTO   0A06 (RETURN)
....................  
.................... float mostra_media(void) { 
.................... 	return media; 
0472:  MOVFF  22,00
0476:  MOVFF  23,01
047A:  MOVFF  24,02
047E:  MOVFF  25,03
.................... } 
0482:  RETURN 0
....................  
.................... long mostra_leitura(void) { 
.................... 	return leitura; 
0484:  MOVF   1E,W
0486:  MOVWF  01
0488:  MOVFF  1F,02
.................... } 
048C:  RETURN 0
....................  
.................... int mostra_nrelementos(void) { 
.................... 	return nrElementos; 
048E:  MOVF   21,W
0490:  MOVWF  01
.................... } 
0492:  RETURN 0
....................  
.................... #endif /* PRESS_H_ */ 
....................  
....................  
.................... int main(void) { 
*
09B6:  CLRF   FF8
09B8:  BCF    FD0.7
09BA:  CLRF   FEA
09BC:  CLRF   FE9
09BE:  MOVLW  0C
09C0:  MOVWF  FAF
09C2:  MOVLW  A2
09C4:  MOVWF  FAC
09C6:  MOVLW  90
09C8:  MOVWF  FAB
09CA:  BSF    FC1.0
09CC:  BSF    FC1.1
09CE:  BSF    FC1.2
09D0:  BCF    FC1.3
....................  
.................... 	delay_ms(500); 
09D2:  MOVLW  02
09D4:  MOVWF  26
09D6:  MOVLW  FA
09D8:  MOVWF  27
09DA:  CALL   002E
09DE:  DECFSZ 26,F
09E0:  BRA    09D6
....................  
.................... 	setup_DAC(); 
09E2:  GOTO   0054
.................... 	reset_variables(); 
09E6:  GOTO   00B0
....................  
.................... 	while (true) { 
.................... 		delay_ms(300); 
09EA:  MOVLW  02
09EC:  MOVWF  26
09EE:  MOVLW  96
09F0:  MOVWF  27
09F2:  CALL   002E
09F6:  DECFSZ 26,F
09F8:  BRA    09EE
.................... 		if (check(512)) 
09FA:  CLRF   29
09FC:  CLRF   28
09FE:  CLRF   27
0A00:  MOVLW  88
0A02:  MOVWF  26
0A04:  BRA    040E
0A06:  MOVF   01,F
0A08:  BZ    0A86
.................... 			printf("Dentro %f \n%4Lu %d", mostra_media(), mostra_leitura(), 
.................... 					mostra_nrelementos()); 
0A0A:  RCALL  0472
0A0C:  MOVFF  00,26
0A10:  MOVFF  01,27
0A14:  MOVFF  02,28
0A18:  MOVFF  03,29
0A1C:  RCALL  0484
0A1E:  MOVFF  02,2B
0A22:  MOVFF  01,2A
0A26:  RCALL  048E
0A28:  MOVFF  01,2C
0A2C:  MOVLW  04
0A2E:  MOVWF  FF6
0A30:  MOVLW  00
0A32:  MOVWF  FF7
0A34:  MOVLW  07
0A36:  MOVWF  2D
0A38:  RCALL  0494
0A3A:  MOVLW  89
0A3C:  MOVWF  FE9
0A3E:  MOVFF  29,30
0A42:  MOVFF  28,2F
0A46:  MOVFF  27,2E
0A4A:  MOVFF  26,2D
0A4E:  MOVLW  02
0A50:  MOVWF  31
0A52:  RCALL  0676
0A54:  MOVLW  20
0A56:  BTFSS  F9E.4
0A58:  BRA    0A56
0A5A:  MOVWF  FAD
0A5C:  MOVLW  0A
0A5E:  BTFSS  F9E.4
0A60:  BRA    0A5E
0A62:  MOVWF  FAD
0A64:  MOVLW  01
0A66:  MOVWF  FE9
0A68:  MOVFF  2B,2E
0A6C:  MOVFF  2A,2D
0A70:  RCALL  07F6
0A72:  MOVLW  20
0A74:  BTFSS  F9E.4
0A76:  BRA    0A74
0A78:  MOVWF  FAD
0A7A:  MOVFF  2C,2D
0A7E:  MOVLW  1F
0A80:  MOVWF  2E
0A82:  RCALL  08C2
.................... 		else 
0A84:  BRA    0B00
.................... 			printf("\Fora   %f \n%4Lu %d", mostra_media(), mostra_leitura(), 
.................... 					mostra_nrelementos()); 
0A86:  RCALL  0472
0A88:  MOVFF  00,26
0A8C:  MOVFF  01,27
0A90:  MOVFF  02,28
0A94:  MOVFF  03,29
0A98:  RCALL  0484
0A9A:  MOVFF  02,2B
0A9E:  MOVFF  01,2A
0AA2:  RCALL  048E
0AA4:  MOVFF  01,2C
0AA8:  MOVLW  18
0AAA:  MOVWF  FF6
0AAC:  MOVLW  00
0AAE:  MOVWF  FF7
0AB0:  MOVLW  07
0AB2:  MOVWF  2D
0AB4:  RCALL  0494
0AB6:  MOVLW  89
0AB8:  MOVWF  FE9
0ABA:  MOVFF  29,30
0ABE:  MOVFF  28,2F
0AC2:  MOVFF  27,2E
0AC6:  MOVFF  26,2D
0ACA:  MOVLW  02
0ACC:  MOVWF  31
0ACE:  RCALL  0676
0AD0:  MOVLW  20
0AD2:  BTFSS  F9E.4
0AD4:  BRA    0AD2
0AD6:  MOVWF  FAD
0AD8:  MOVLW  0A
0ADA:  BTFSS  F9E.4
0ADC:  BRA    0ADA
0ADE:  MOVWF  FAD
0AE0:  MOVLW  01
0AE2:  MOVWF  FE9
0AE4:  MOVFF  2B,2E
0AE8:  MOVFF  2A,2D
0AEC:  RCALL  07F6
0AEE:  MOVLW  20
0AF0:  BTFSS  F9E.4
0AF2:  BRA    0AF0
0AF4:  MOVWF  FAD
0AF6:  MOVFF  2C,2D
0AFA:  MOVLW  1F
0AFC:  MOVWF  2E
0AFE:  RCALL  08C2
.................... 		puts(""); 
0B00:  MOVLW  2C
0B02:  MOVWF  FF6
0B04:  MOVLW  00
0B06:  MOVWF  FF7
0B08:  BRA    0992
0B0A:  MOVLW  0D
0B0C:  BTFSS  F9E.4
0B0E:  BRA    0B0C
0B10:  MOVWF  FAD
0B12:  MOVLW  0A
0B14:  BTFSS  F9E.4
0B16:  BRA    0B14
0B18:  MOVWF  FAD
.................... 	} 
0B1A:  BRA    09EA
.................... 	return 0; 
0B1C:  MOVLW  00
0B1E:  MOVWF  01
.................... } 
0B20:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0080   NOSTVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
